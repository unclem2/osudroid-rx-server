{% extends "base.html" %}

{% block title %}
    {% if country %}
        {{ country }} {% if sortby == 'score' %}Score{% else %}PP{% endif %} Leaderboard
    {% else %}
        Global {% if sortby == 'score' %}Score{% else %}PP{% endif %} Leaderboard
    {% endif %}
{% endblock %}

{% block content %}
<style>
    :root {
        --text-color: #333;
        --primary-color: #007BFF;
        --card-bg: var(--background-color);
        --card-radius: 12px;
        --gold: #ffd700;
        --silver: #c0c0c0;
        --bronze: #cd7f32;
        --color-primary: #000;
        --color-background: #fffb;
    }

    @media (prefers-color-scheme: dark) {
        :root {
            --background-color: #111;
            --text-color: #DDD;
        }
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        background-color: var(--background-color);
        color: var(--text-color);
    }

    header {
        text-align: center;
        padding: 30px 0 10px;
    }

    h1 {
        font-size: 2rem;
        margin: 0;
    }

    .controls {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 10px;
        margin: 20px auto;
    }

    .controls input[type="text"] {
        padding: 10px;
        width: 250px;
        border: 1px solid #ccc;
        border-radius: 6px;
    }

    .controls button {
        padding: 10px 16px;
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        transition: background-color 0.2s ease-in-out;
    }

    .controls button:hover {
        background-color: #0056b3;
    }

    .controls button:disabled {
        background-color: #999;
        cursor: not-allowed;
    }

    .leaderboard-wrapper {
        display: flex;
        justify-content: center;
        padding: 20px;
    }

    .leaderboard-card {
        width: 100%;
        max-width: 1000px;
        background-color: var(--card-bg);
        border-radius: var(--card-radius);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.06);
        padding: 20px;
        overflow-x: auto;
    }

    table.leaderboard-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        overflow: hidden;
        border-radius: 10px;
    }

    .leaderboard-table th,
    .leaderboard-table td {
        padding: 16px 14px;
        text-align: left;
        font-size: 15px;
        white-space: nowrap;
    }

    .leaderboard-table th {
        background: linear-gradient(to right, #007bff, #3399ff);
        color: white;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .leaderboard-table tr:hover {
        background-color: var(--background-color);
        transition: background-color 0.2s ease;
    }

    .leaderboard-table td a {
        color: var(--text-color);
        text-decoration: none;
        font-weight: 500;
    }

    .leaderboard-table td a:hover {
        text-decoration: underline;
    }

    .pagination {
        text-align: center;
        margin: 20px 0;
    }

    .pagination button {
        margin: 0 5px;
        padding: 8px 14px;
        background-color: var(--primary-color);
        color: #fff;
        border: none;
        border-radius: 6px;
        cursor: pointer;
    }

    .pagination button:disabled {
        background-color: #999;
        cursor: not-allowed;
    }

    @media (max-width: 768px) {
        .controls {
            flex-direction: column;
            align-items: center;
        }

        .controls input {
            width: 90%;
        }
    }
</style>


<!-- Временно выводим значение переменной -->
<p>sortby = {{ sortby }}</p>
<p>country = {{ country }}</p>
<p>leaderboard length = {{ leaderboard | length }}</p>

<header>
    <h1>
        {% if country %}
            {{ country }} {% if sortby == 'score' %}Score{% else %}PP{% endif %} Leaderboard
        {% else %}
            Global {% if sortby == 'score' %}Score{% else %}PP{% endif %} Leaderboard
        {% endif %}
    </h1>
</header>

<div class="controls">
    <input type="text" id="search-input" placeholder="Search by username...">

    {% set base_url = "/user/leaderboard/country/" + country if country else "/user/leaderboard/global" %}

    <button 
        {% if sortby == 'score' %}disabled{% endif %}
        onclick="location.href='{{ base_url }}?sortby=score'">
        Sort by Ranked Score
    </button>

    <button 
        {% if sortby != 'score' %}disabled{% endif %}
        onclick="location.href='{{ base_url }}'">
        Sort by PP
    </button>

    <select onchange="redirect(this.value)">
        <option value="/user/leaderboard/global{% if sortby == 'score' %}?sortby=score{% endif %}">
            All countries
        </option>

        {% for c in countries %}
            <option 
                value="/user/leaderboard/country/{{ c }}{% if sortby == 'score' %}?sortby=score{% endif %}"
                {% if c == country %}selected{% endif %}>
                {{ c }}
            </option>
        {% endfor %}
    </select>
</div>

<div class="leaderboard-wrapper">
    <div class="leaderboard-card">
        <table class="leaderboard-table" id="leaderboard-table">
            <thead>
                <tr>
                    <th>Rank</th>
                    <th>Player</th>
                    {% if sortby == 'score' %}
                        <th>Ranked Score</th>
                    {% else %}
                        <th>PP</th>
                    {% endif %}
                    <th>Plays</th>
                    <th>ID</th>
                </tr>
            </thead>
            <tbody id="leaderboard-body">
                {% for player in leaderboard %}
                <tr>
                    <td>
                        {% if country %}
                            {% if sortby == 'score' %}
                                {{ player.country_score_rank }}
                            {% else %}
                                {{ player.country_pp_rank }}
                            {% endif %}
                        {% else %}
                            {% if sortby == 'score' %}
                                {{ player.score_rank }}
                            {% else %}
                                {{ player.pp_rank }}
                            {% endif %}
                        {% endif %}
                    </td>
                    <td><a href="/user/profile.php?id={{ player.id }}">{{ player.username }}</a></td>
                    <td>
                        {% if sortby == 'score' %}
                            {{ player.rscore }}
                        {% else %}
                            {{ player.pp }}
                        {% endif %}
                    </td>
                    <td>{{ player.plays }}</td>
                    <td>{{ player.id }}</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>

<div class="pagination">
    <button id="prev-page" disabled>Previous</button>
    <button id="next-page">Next</button>
</div>

<script>
    function redirect(url) {
        if (url) {
            window.location.href = url;
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        const tableBody = document.querySelector('#leaderboard-body');
        let allRows = Array.from(tableBody.querySelectorAll('tr'));
        const searchInput = document.getElementById('search-input');
        const perPage = 10;
        let currentPage = 1;
        let filteredRows = allRows.slice();

        function displayPage(page) {
            const start = (page - 1) * perPage;
            const end = start + perPage;

            allRows.forEach(row => (row.style.display = 'none'));
            filteredRows.slice(start, end).forEach(row => row.style.display = '');

            filteredRows.forEach(row => {
                row.cells[0].style.color = '';
                row.cells[0].style.fontWeight = '';
            });

            filteredRows.slice(start, end).forEach(row => {
                const actualRank = parseInt(row.cells[0].textContent.trim());
                if (actualRank === 1) {
                    row.cells[0].style.color = 'var(--gold)';
                    row.cells[0].style.fontWeight = 'bold';
                } else if (actualRank === 2) {
                    row.cells[0].style.color = 'var(--silver)';
                    row.cells[0].style.fontWeight = 'bold';
                } else if (actualRank === 3) {
                    row.cells[0].style.color = 'var(--bronze)';
                    row.cells[0].style.fontWeight = 'bold';
                }
            });

            document.getElementById('prev-page').disabled = page === 1;
            document.getElementById('next-page').disabled = end >= filteredRows.length;
        }

        function updateTable() {
            tableBody.innerHTML = '';
            filteredRows.forEach(row => tableBody.appendChild(row));
            displayPage(currentPage);
        }

        function filterTable() {
            const query = searchInput.value.toLowerCase().trim();
            filteredRows = allRows.filter(row => {
                return row.cells[1].textContent.toLowerCase().includes(query);
            });
            currentPage = 1;
            updateTable();
        }

        searchInput.addEventListener('input', filterTable);

        document.getElementById('prev-page').addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage--;
                displayPage(currentPage);
            }
        });

        document.getElementById('next-page').addEventListener('click', () => {
            const maxPage = Math.ceil(filteredRows.length / perPage);
            if (currentPage < maxPage) {
                currentPage++;
                displayPage(currentPage);
            }
        });

        displayPage(currentPage);
    });
</script>
{% endblock %}
